generator client {
  provider = "prisma-client-js"
  output   = "generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model products {
  productID   Int         @id @default(autoincrement())
  name        String
  description String
  price       Decimal     @db.Decimal(10, 2)
  category    Category
  brand       String?
  size        String?     // e.g. S, M, L
  color       String?
  stock       Int?
  images      String[]    // cloudinary

  orderItem   orderItem[]
  cart        cart[]
}

enum Category {
  CLOTHING
  SHOES
  BAGS
  JEWELRY
  ACCESSORIES
}

model customers {
  customerID Int       @id @default(autoincrement())
  fullName   String
  email      String    @unique
  password   String
  role       Role      @default(CUSTOMER)
  deletedAt  DateTime? //soft delete

  orders  orders[]
  cart    cart[]
  Payment Payment[]
}

model orders {
  orderID     Int         @id @default(autoincrement())
  customerID  Int
  orderDate   DateTime
  totalAmount Float
  status      OrderStatus @default(PENDING)
  shippedAt   DateTime?
  deliveredAt DateTime?

  customer  customers   @relation(fields: [customerID], references: [customerID])
  orderItem orderItem[]
  Payment   Payment[]
}

model orderItem {
  orderItemID Int      @id @default(autoincrement())
  orderID     Int
  productID   Int
  quantity    Int
  price       Decimal  @db.Decimal(10, 2)
  order       orders   @relation(fields: [orderID], references: [orderID])
  product     products @relation(fields: [productID], references: [productID])
}

model cart {
  cartID     Int       @id @default(autoincrement())
  productID  Int
  customerID Int
  customer   customers @relation(fields: [customerID], references: [customerID])
  product    products  @relation(fields: [productID], references: [productID])
}

model Payment {
  id             Int           @id @default(autoincrement())
  orderID        Int
  customerID     Int
  amount         Decimal       @db.Decimal(10, 2)
  transactionRef String?       @unique
  currency       String
  status         PaymentStatus
  method         PaymentMethod
  paidAt         DateTime?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  order    orders    @relation(fields: [orderID], references: [orderID])
  customer customers @relation(fields: [customerID], references: [customerID])
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  CANCELLED
}

enum PaymentMethod {
  CARD
  MPESA
  PAYPAL
  STRIPE
}

enum Role {
  ADMIN
  CUSTOMER
}
